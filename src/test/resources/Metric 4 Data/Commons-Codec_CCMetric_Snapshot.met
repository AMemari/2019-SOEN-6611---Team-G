<?xml version="1.0" ?>
<SNAPSHOT profile="Complexity metrics" timestamp="Sun, 24 Mar 2019 22:51:33 EDT" version="1.8">
  <METRIC class_name="com.sixrr.stockmetrics.methodMetrics.CyclomaticComplexityMetric">
    <VALUE measured="org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodec.decode(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.decode(Object)" value="4.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute()" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha512(byte[],InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule.matches(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testExceedLength()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.DecoderException.DecoderException(Throwable)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.DecoderException.DecoderException(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodec.setEncodeBlanks(boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked()" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Md5CryptTest.testCtor()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.NysiisTest.createStringEncoder()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodec.doDecoding(byte[])" value="7.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtils.getBytes(String,Charset)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacMd5(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(int,byte[])" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Hex.encodeHex(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.handleP(String,DoubleMetaphoneResult,int)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Codec105ErrorInputStream.read(byte[],int,int)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testMsSqlServer1()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodec.doEncoding(byte[])" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.createScanner(String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.NysiisTest.testFal()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testEncodeBatch3()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.getPattern()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhonetic.arrayContains(char[],char)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.getHmacSha512(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodec.BCodec(Charset)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha512Hex(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStreamTest.testByteByByte(byte[],byte[],int,byte[])" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.md5Hex(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.CharEncodingTest.testUsAscii()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.getNameType()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendPrimary(char)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtilsTest.testSha256()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32InputStream.Base32InputStream(InputStream,boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodecTest.tearDown()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodec.decode(String,String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacMd5Hex(byte[],byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testPairs()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testObjectEncode()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.stripQuotes(String)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.Phoneme.Phoneme(Phoneme,Phoneme)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone2Test.checkDoubleMetaphone(int,boolean)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.getHmacMd5(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Hex.Hex()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.RefinedSoundex.encode(Object)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Nysiis.Nysiis(boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.updateHmac(Mac,byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.StringEncoderAbstractTest.testEncodeWithInvalidObject()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendAlternate(char)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphoneTest.assertDoubleMetaphone(String,String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.Soundex.difference(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(String,boolean)" value="19.0"/>
    <VALUE measured="org.apache.commons.codec.language.NysiisTest.testSpecialBranches()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.log(Throwable)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.RefinedSoundex.RefinedSoundex(char[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(String,int)" value="4.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha512(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha256Hex(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhonetic.encode(Object)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodec.encode(Object)" value="4.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testEmptyBase64()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodec.getCharset()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodecTest.validateState(URLCodec)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha1Hex(byte[],InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithEmptySalt()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Languages.SomeLanguages.isEmpty()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid()" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphoneTest.validateFixture(String[][])" value="4.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.CharEncodingTest.testUtf16()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.StringEncoderComparator.compare(Object,Object)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodec.decode(Object)" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacMd5(byte[],byte[])" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Nysiis.isVowel(char)" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream(OutputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Soundex.encode(Object)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testUUID()" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.isArrayByteBase64(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testIsStringBase64()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.NysiisTest.testTrueVariant()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.RFC1522Codec.encodeText(String,Charset)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Languages.SomeLanguages.getLanguages()" value="1.0"/>
    <VALUE measured="null.isSingleton()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.UnixCrypt.permOp(int,int,int,int,int[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.getInitializedMac(HmacAlgorithms,byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int,Context)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.invoke()" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.StringEncoderAbstractTest.checkEncodings(String[][])" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha256Hex(byte[],byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.getDefaultCharset()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(int)" value="1.0"/>
    <VALUE measured="null.isMatch(CharSequence)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(int)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone2Test.createStringEncoder()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testSingletons()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testNullKey()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.testCustomCharset(String,String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodecTest.testProvidePaddingByte()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode()" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone1Test.createStringEncoder()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Crypt.crypt(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(Scanner,String,Map&lt;Character, List&lt;Rule&gt;&gt;,Map&lt;Character, Character&gt;)" value="14.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodecTest.testEncodeObjects()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.net.RFC1522CodecTest.RFC1522TestCodec.getEncoding()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Hex.decodeHex(char[])" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha384(byte[],InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.EncoderExceptionTest.testConstructorString()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.pattern(String)" value="23.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.shaHex(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoder.getNameType()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.encodeInteger(BigInteger)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32Test.testBase32Samples()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64TestData.randomData(int,boolean)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtilsTest.testMd5Length()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhonetic.preprocess(String)" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Codec13Test.initBYTES()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha1Hex(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch.equals(Object)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.md2Hex(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(String,int)" value="6.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodecInputStream.reset()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha384Hex(byte[],InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha512(byte[],byte[])" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.getShaDigest()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone.encode(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64TestData.fill(byte[],int,InputStream)" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(String)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testNewInstance()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.getMd5Digest()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.Base64(int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec(Charset,boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodec.getDefaultBufferSize()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis()" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.getSha384Digest()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32TestData.bytesContain(byte[],byte)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.decodeInteger(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.Phoneme.toString()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtils.equals(CharSequence,CharSequence)" value="6.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(BitSet,byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters()" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendPrimary(String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodec.decode(Object)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.encode(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.EncoderException.EncoderException(Throwable)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodec.QCodec(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testConstructors()" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.getPhonemes()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.CharEncodingTest.testUtf16Be()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodec.Context.toString()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStream.Base64InputStream(InputStream,boolean,int,byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Hex.encode(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptNullData()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodec.readResults(byte[],int,int,Context)" value="4.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32.Base32(boolean,byte)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodec.decode(byte[])" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodecTest.testInvalidEncoding()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64OutputStreamTest.testByChunk(byte[],byte[],int,byte[])" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Languages.SomeLanguages.restrictTo(LanguageSet)" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.CharEncodingTest.testConstructor()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.encodeBase64(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule.Rule(String,String,String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.EncoderException.EncoderException(String,Throwable)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodec.decode(String)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.PhonemeBuilder(Phoneme)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.handleH(String,DoubleMetaphoneResult,int)" value="4.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodec.decode(Object)" value="4.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.updateDigest(MessageDigest,InputStream)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testPHTOF()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha512(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.RefinedSoundex.getMappingCode(char)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Lang.guessLanguages(String)" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhonetic.isEncodeEqual(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Soundex.getSoundexMapping()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream(OutputStream,boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.handleGH(String,DoubleMetaphoneResult,int)" value="16.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodec.BCodec(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodecTest.constructString(int[])" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.StringEncoderAbstractTest.checkEncodingVariations(String,String[])" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.isBase64(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodec.decode(Object)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.EncoderException.EncoderException(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testEncodeDecode(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.copyData(int,int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha384Hex(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(char)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testNewInstance2()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha1Hex(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testCodeIntegerEdgeCases()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtils.getBytesUnchecked(String,String)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtils.getBytesUtf16Le(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodecInputStream.mark(int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Crypt.crypt(byte[],String)" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphone()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.Base64(int,byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha(InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testMsSqlServer3()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.UnixCrypt.fourBytesToInt(byte[],int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha256Hex(byte[],InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Languages.Languages(Set&lt;String&gt;)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.getDigest(String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone.Caverphone()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32.Base32(int,byte[],boolean,byte)" value="8.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.md5Hex(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.testEncodeZeroes()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacAlgorithms.toString()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.NysiisTest.testRule1()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha512Hex(byte[],byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhoneticTest.testExamples()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodecTest.assertDecodeObject(byte[],String)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.log(String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStream.Base64InputStream(InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.createScanner(NameType,RuleType,String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.net.RFC1522Codec.encodeText(String,String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodecOutputStream.flush()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_Space_NoMatch()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Languages.SomeLanguages.contains(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.PhonemeList.PhonemeList(List&lt;Phoneme&gt;)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.encode(Object)" value="4.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodecTest.setUp()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodecOutputStream.BaseNCodecOutputStream(OutputStream,BaseNCodec,boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte[],boolean)" value="6.0"/>
    <VALUE measured="org.apache.commons.codec.language.Metaphone.isVowel(StringBuilder,int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.CacheSubSequencePerformanceTest.test(CharSequence)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testCodec112()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullAlgo()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.shaHex(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule.getReplacements(String,boolean)" value="4.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStream(int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.md2Hex(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.assertIsMetaphoneEqual(String,String[])" value="4.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.shaHex(InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.isInAlphabet(byte)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha1(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphoneTest.createStringEncoder()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodecInputStream.skip(long)" value="4.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.decode(String,String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Lang.Lang(List&lt;LangRule&gt;,Languages)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Soundex.encode(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundex.encode(String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.getNextChar()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.StringEncoderComparator.StringEncoderComparator(StringEncoder)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Hex.encodeHexString(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullSalt()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundexTest.encode(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NINO_NoChange()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodec.toByteArray(String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES()" value="4.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.assertNotEmpty(BeiderMorseEncoder,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtils.newStringUtf8(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha256(byte[],byte[])" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Soundex.getMappingCode(String,int)" value="8.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.testCustomCharsetToString()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.getPhoneme()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule.isVowel(char)" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.digest.B64Test.testB64from24bit()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(String,String)" value="11.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(int,boolean,ByteArrayOutputStream)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Languages.getInstance(NameType)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.CacheSubSequencePerformanceTest.test()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoder.isConcat()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Languages.getLanguages()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(String)" value="37.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodecOutputStream.flush(boolean)" value="4.0"/>
    <VALUE measured="null.restrictTo(LanguageSet)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck()" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodec.resizeBuffer(Context)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtils.getBytesUtf16Be(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtilsTest.testConstructor()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.NysiisTest.testRule4Dot2()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.contains(String,int,int,String...)" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Codec13Test.utf8(String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testNewInstance3()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.Phoneme.Phoneme(Phoneme,Phoneme,LanguageSet)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.encodeBase64Chunked(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.getRandom()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.LanguageGuessingTest.data()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullData()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.validateFixture(String[][])" value="4.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testHWRuleEx2()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.encode(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.NysiisTest.testSnat()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32.Base32(byte)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.CharsetsTest.testUtf16()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.Phoneme.append(CharSequence)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStream(int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.testDecodeClassCastException()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.StringEncoderComparator.StringEncoderComparator()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.getInstance(NameType,RuleType,LanguageSet)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.toString(byte[])" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],String)" value="10.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.getMaxCodeLen()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds()" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodec.encodeToString(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode()" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Hex.toString()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodecTest.constructString(int[])" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.md2Hex(InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32.Base32()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testKnownDecodings()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.PhoneticEngine(NameType,RuleType,boolean,int)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.decode(String,Charset)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.DoubleMetaphoneResult(int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,Context)" value="15.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testTCH()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.getMaxPhonemes()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.decode(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodec.containsAlphabetOrPad(byte[])" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.language.Soundex.map(char)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.Phoneme.getLanguages()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.getPrimary()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.conditionCH0(String,int)" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.testEncodeClassCastException()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testWhy()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.endsWith(CharSequence,CharSequence)" value="4.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha384Hex(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.PhonemeList.getPhonemes()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha256Hex(InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.RFC1522CodecTest.RFC1522TestCodec.doDecoding(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundex.DaitchMokotoffSoundex()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundex.cleanup(String)" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.testCustomCharset()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhonetic.encode(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[],String)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64TestData.streamToBytes(InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked()" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStream(int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" value="8.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodecTest.constructString(int[])" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testBadCharacters()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testKnownEncodings()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla()" value="1.0"/>
    <VALUE measured="null.compare(Phoneme,Phoneme)" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.getInstanceMap(NameType,RuleType,String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(String)" value="4.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch.Branch()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch.createBranch()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[])" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(char,char)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundexTest.soundex(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.NysiisTest.testRule6()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.CryptTest.testCryptWithBytes()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.getSha256Digest()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendAlternate(String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64TestData.bytesContain(byte[],byte)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtils.getBytesIso8859_1(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodec.encode(Object)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Languages.getInstance(String)" value="7.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodecTest.testEncodeObjects()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.Phoneme.mergeWithLanguage(LanguageSet)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Soundex.soundex(String)" value="8.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Soundex.getMaxLength()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.UnixCrypt.crypt(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Hex.Hex(Charset)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Soundex.Soundex(char[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Languages.SomeLanguages.isSingleton()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testDecodePadOnly()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha256Hex(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.handleAEIOUY(DoubleMetaphoneResult,int)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" value="6.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodec.getCharset()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha384(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Metaphone.isNextChar(StringBuilder,int,char)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodecTest.testEncodeObjects()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream(OutputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtils.newString(byte[],Charset)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.getMd2Digest()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.md5(InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha1Hex(InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Hex.decode(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32Test.testBase32Chunked()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.getHmacSha1(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundex.encode(Object)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Lang.LangRule.matches(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testByteToStringVariations()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodec.encode(String,String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtils.getBytesUtf16(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodec.encode(String)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha1(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodecTest.testNullInput()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.DecoderExceptionTest.testConstructor0()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testSecretKeySpecAllowsEmtyKeys()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.CharsetsTest.testUtf16Be()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.createStringEncoder()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha256(byte[],InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodec.decode(Object)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.Rule(String,String,String,PhonemeExpr)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testIsUrlSafe()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexUtils.difference(StringEncoder,String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testCodeInteger2()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.LanguageGuessingTest.LanguageGuessingTest(String,String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64OutputStreamTest.testByteByByte(byte[],byte[],int,byte[])" value="6.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.isConcat()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha1(byte[],InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.PhonemeBuilder(Set&lt;Phoneme&gt;)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodecInputStream.read()" value="4.0"/>
    <VALUE measured="org.apache.commons.codec.language.NysiisTest.testBran()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.DecoderException.DecoderException()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull()" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacMd5Hex(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha512Hex(InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.updateHmac(Mac,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(BitSet,byte[],boolean)" value="16.0"/>
    <VALUE measured="org.apache.commons.codec.StringEncoderAbstractTest.testLocaleIndependence()" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Crypt.crypt(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testTriplets()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtils.newIllegalStateException(String,UnsupportedEncodingException)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream(OutputStream,boolean,int,byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.handleZ(String,DoubleMetaphoneResult,int,boolean)" value="7.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testCodec68()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Nysiis.nysiis(String)" value="14.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeBasic()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoder.removeDoubleConsonants(String)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodec.getEncoding()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.NysiisTest.testOthers()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32.isInAlphabet(byte)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Metaphone.getMaxCodeLen()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Soundex.Soundex()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodec.encode(Object)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.StringEncoderAbstractTest.testEncodeEmpty()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.append(CharSequence)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testNonBase64Test()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithInvalidSalt()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Lang.LangRule.LangRule(Pattern,Set&lt;String&gt;,boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.removeNext()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodec.encode(String,String)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.handleD(String,DoubleMetaphoneResult,int)" value="4.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule.getPatternLength()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_CapitalA_ReturnsTrue()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testConstructor()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,Context)" value="18.0"/>
    <VALUE measured="org.apache.commons.codec.net.RFC1522CodecTest.assertExpectedDecoderException(String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(byte)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha512Hex(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.getInstanceMap(NameType,RuleType,LanguageSet)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone1Test.testEndMb()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoder.setRuleType(RuleType)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.handleR(String,DoubleMetaphoneResult,int,boolean)" value="6.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodec.URLCodec(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodec.getDefaultCharset()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.parseRules(Scanner,String)" value="12.0"/>
    <VALUE measured="org.apache.commons.codec.language.Soundex.setMaxLength(int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha1Hex(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" value="19.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testDifference()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testCodeInteger4()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodec.available(Context)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.BinaryEncoderAbstractTest.testEncodeEmpty()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Hex.toDigit(char,int)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.Base64(int,byte[],boolean)" value="6.0"/>
    <VALUE measured="org.apache.commons.codec.language.Metaphone.isMetaphoneEqual(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.B64.b64from24bit(byte,byte,byte,int,StringBuilder)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(int,ByteArrayOutputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.md2(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.handleJ(String,DoubleMetaphoneResult,int,boolean)" value="17.0"/>
    <VALUE measured="org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.RefinedSoundexTest.testDifference()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.handleSC(String,DoubleMetaphoneResult,int)" value="8.0"/>
    <VALUE measured="org.apache.commons.codec.CharsetsTest.testUtf8()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Languages.LanguageSet.from(Set&lt;String&gt;)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha256(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoder.isVowel(String)" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodecTest.testInvalidEncoding()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.Base64(boolean)" value="1.0"/>
    <VALUE measured="null.contains(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisVowel_SingleVowel_ReturnsTrue()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.cleanInput(String)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Codec13Test.initSTRINGS()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.empty(LanguageSet)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec(Charset)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.testDencodeEmpty()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.CacheSubSequencePerformanceTest.test(CharSequence,int)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.Nysiis.encode(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.updateHmac(Mac,InputStream)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32TestData.randomData(BaseNCodec,int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnameCornerCase_Nulls_NoMatch()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.encode(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative()" value="4.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone2Test.createStringEncoder()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha384(InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.getPhonemeBuilder()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexUtils.differenceEncoded(String,String)" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule.toString()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.handleT(String,DoubleMetaphoneResult,int)" value="9.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodec.encode(String,String)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoder.encode(String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32TestData.streamToBytes(InputStream,byte[])" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(String,String)" value="6.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.join(Iterable&lt;String&gt;,String)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStreamTest.testRead0()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.testEncodeEmpty()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testMsSqlServer2()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone2.encode(String)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.RefinedSoundex.RefinedSoundex()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testInternalNoSuchAlgorithmException()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.decodeBase64(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(CharSequence,boolean,int,CharSequence,int,int)" value="8.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.getAlternate()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Codec105ErrorInputStream.read()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testEncodeBatch2()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.DecoderExceptionTest.testConstructorString()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodec.doDecoding(byte[])" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.Phoneme.Phoneme(CharSequence,LanguageSet)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.handleC(String,DoubleMetaphoneResult,int)" value="17.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodec.hasData(Context)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodecInputStream.available()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.RuleTest.NegativeIntegerBaseMatcher.describeTo(Description)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.RFC1522CodecTest.testNullInput()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.handleL(String,DoubleMetaphoneResult,int)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacMd5(byte[],InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhonetic.CologneBuffer.toString()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.NameType.NameType(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.Phoneme.join(Phoneme)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoder.getRuleType()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.encode(String,String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.getNextPos()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodec.decode(String)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodec.toAsciiString(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.charAt(String,int)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch.finish()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.toIntegerBytes(BigInteger)" value="4.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha1(byte[],byte[])" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Languages.SomeLanguages.SomeLanguages(Set&lt;String&gt;)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testStringToByteVariations()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.RefinedSoundexTest.testEncode()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.getHmacSha384(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha384(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Hex.getCharsetName()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.RuleType.getName()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone.encode(Object)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.UnixCrypt.dEncrypt(int,int,int,int,int,int[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(Object)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodec.decode(String)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(String)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtils.getBytesUtf8(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedNullInput()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Hex.getCharset()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.UnixCrypt.hPermOp(int,int,int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngineTest.PhoneticEngineTest(String,String,NameType,RuleType,boolean,int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(String,boolean)" value="37.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.isSilentStart(String)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha1(InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],String,String)" value="13.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32TestData.resizeArray(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.UnixCrypt.crypt(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.testRequiredCharset()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.getSha1Digest()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEnginePerformanceTest.test()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32OutputStreamTest.testByteByByte(byte[],byte[],int,byte[])" value="6.0"/>
    <VALUE measured="null.toString()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoder.getFirst3Last3(String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest(String[][],boolean)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStream(int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhoneticTest.testHyphen()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.RefinedSoundex.soundex(String)" value="6.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodec.BaseNCodec(int,int,int,int,byte)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoder.cleanName(String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhonetic.CologneOutputBuffer.addRight(char)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" value="8.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.EncoderExceptionTest.testConstructor0()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.CryptTest.testCrypt()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.getCharset()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4()" value="1.0"/>
    <VALUE measured="null.merge(LanguageSet)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.CharEncodingTest.testUtf8()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3()" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.encode(Map&lt;String, String&gt;,boolean,String)" value="6.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha384(byte[],byte[])" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch.processNextReplacement(String,boolean)" value="6.0"/>
    <VALUE measured="org.apache.commons.codec.StringEncoderAbstractTest.getStringEncoder()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodecTest.testDecodeObjects()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.CologneInputBuffer(char[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.apply(PhonemeExpr,int)" value="6.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone2Test.testEndMb()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.RefinedSoundex.encode(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacAlgorithms.HmacAlgorithms(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha384Hex(InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,Context)" value="18.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt(byte[],String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.isFound()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.NysiisTest.testDad()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.AbstractCaverphone.AbstractCaverphone()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.CharEncodingTest.testIso8859_1()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoder.setConcat(boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundex.DaitchMokotoffSoundex(boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodec.encode(String,Charset)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodec.getDefaultCharset()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtils.getBytesUsAscii(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha256(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding()" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha384Hex(byte[],byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUnchecked(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.isVowel(char)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.isBase64(byte[])" value="4.0"/>
    <VALUE measured="org.apache.commons.codec.language.Metaphone.Metaphone()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodec.getEncoding()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Nysiis.Nysiis()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testBase64()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32.Base32(int,byte[],boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.decodeBase64(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32InputStreamTest.testByteByByte(byte[],byte[],int,byte[])" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.CharEncodingTest.testUtf16Le()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtils.newStringUsAscii(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch.hashCode()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.getInitializedMac(String,byte[])" value="4.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.createStringEncoder()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStreamTest.testByChunk(byte[],byte[],int,byte[])" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Hex.encode(Object)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" value="11.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32.Base32(boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.makeString()" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder()" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha384Hex(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Languages.langResourceName(NameType)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,Context)" value="18.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhonetic.CologneBuffer.length()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.Phoneme.getPhonemeText()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testHWRuleEx3()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhoneticTest.createStringEncoder()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.Charsets.toCharset(String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Codec13Test.initCHUNKED_STRINGS()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngineTest.data()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtilsTest.testNewString(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Languages.SomeLanguages.toString()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.parsePhonemeExpr(String)" value="6.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testDecodeEncode(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.NysiisTest.assertEncodings(String[]...)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.md5(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtils.newStringUtf16(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtilsTest.testShaHex()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.Base64()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.NysiisTest.testTranan()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.decode(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch.toString()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.checkDecodeHexOddCharacters(char[])" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream(OutputStream,boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodec.decode(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodec.QCodec()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds()" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.updateDigest(MessageDigest,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding()" value="4.0"/>
    <VALUE measured="org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.StringEncoderAbstractTest.testEncodeNull()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodec.doEncoding(byte[])" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodec.encode(String,Charset)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.RulesApplication(Map&lt;String, List&lt;Rule&gt;&gt;,CharSequence,PhonemeBuilder,int,int)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.RefinedSoundex.difference(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Lang.loadFromResource(String,Languages)" value="9.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32Test.testRandomBytes()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testEncodeBatch4()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.NysiisTest.encodeAll(String[],String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodec.isEncodeBlanks()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.encode(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.createGenericApproxEncoder()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.isDoubleMetaphoneEqual(String,String,boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.testCustomCharsetBadName()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.NysiisTest.testRule2()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.NysiisTest.testRule4Dot1()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Nysiis.isStrict()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Hex.encodeHex(byte[],boolean)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.digest.MessageDigestAlgorithms.MessageDigestAlgorithms()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodec.decode(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32OutputStreamTest.testByChunk(byte[],byte[],int,byte[])" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodecTest.constructString(int[])" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testHWRuleEx1()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone.caverphone(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.UtilsTest.testConstructor()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodec.encode(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.DecoderException.DecoderException(String,Throwable)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.updateDigest(MessageDigest,byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.NysiisTest.testDropBy()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Languages.SomeLanguages.getAny()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Metaphone.setMaxCodeLen(int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.AbstractCaverphone.isEncodeEqual(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testSingletonsChunked()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.createResourceName(NameType,RuleType,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodecInputStream.markSupported()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha512(InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Metaphone.encode(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodecTest.testNullInput()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.RuleTest.NegativeIntegerBaseMatcher.matches(Object)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha256(InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.NysiisTest.testRule7()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha256Hex(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodecOutputStream.close()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(byte[],String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexUtils.clean(String)" value="6.0"/>
    <VALUE measured="org.apache.commons.codec.CharsetsTest.testToCharset()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacMd5Hex(byte[],InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.digest(MessageDigest,InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoder.removeVowels(String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.md2(InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Soundex.Soundex(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodec.encodeAsString(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.NysiisTest.testSnad()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.getLContext()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull()" value="1.0"/>
    <VALUE measured="null.compare(Rule,Rule)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha384(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32.Base32(int,byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Hex.decode(Object)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha1Hex(byte[],byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32InputStreamTest.testByChunk(byte[],byte[],int,byte[])" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32TestData.fill(byte[],int,InputStream)" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtilsTest.setUp()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodecTest.testDecodeObjects()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(String,int)" value="7.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.getLang()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testEncodeBasic()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(String)" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32Test.testRandomBytesHex()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodec.getDefaultCharset()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32TestData.streamToBytes(InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha512(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtilsTest.testConstructable()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.Utils.digit16(byte)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhoneticTest.testAaclan()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.UnixCrypt.intToFourBytes(int,byte[],int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoder.encode(Object)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.Metaphone.metaphone(String)" value="81.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64TestData.streamToBytes(InputStream,byte[])" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_10_Returns3_Successfully()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.CharsetsTest.testIso8859_1()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.handleW(String,DoubleMetaphoneResult,int)" value="11.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.CharsetsTest.testUsAscii()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodec.decodeUrl(byte[])" value="6.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodecInputStream.BaseNCodecInputStream(InputStream,BaseNCodec,boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha512Hex(byte[],InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.parsePhoneme(String)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Metaphone.regionMatch(StringBuilder,int,String)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha512Hex(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodecTest.setUp()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Codec13Test.testDecoder()" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.net.RFC1522CodecTest.RFC1522TestCodec.doEncoding(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__AIDAN_Returns_ADN()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoder.setMaxPhonemes(int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Hex.Hex(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodec.encode(byte[])" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32Test.testBase32HexSamples()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodec.URLCodec()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha256(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodecTest.testDecodeObjects()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoder.removeAccents(String)" value="4.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended1()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.md5(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.encode(String,LanguageSet)" value="15.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.getSha512Digest()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac()" value="1.0"/>
    <VALUE measured="null.isEmpty()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.RuleType.RuleType(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.md5Hex(InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.NysiisTest.testRule5()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.isDoubleMetaphoneEqual(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.encodeBase64URLSafe(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(byte)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.StringEncoderAbstractTest.checkEncoding(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngineTest.testEncode()" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid()" value="4.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest(boolean)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodec.encode(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.B64Test.testB64T()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.isBase64(byte)" value="4.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtilsTest.testSha384()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.UnixCryptTest.testCtor()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],String,String,int,String)" value="19.0"/>
    <VALUE measured="null.getAny()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.RFC1522Codec.decodeText(String)" value="8.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtils.newStringUtf16Be(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.RuleTest.makePhonemes()" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.language.Nysiis.encode(Object)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.createStringEncoder()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.UnixCrypt.body(int[],int,int)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodec.BCodec()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodec.encode(Object)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.md2(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds()" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.handleCC(String,DoubleMetaphoneResult,int)" value="6.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.getInstance(NameType,RuleType,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.RefinedSoundexTest.createStringEncoder()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.EncoderException.EncoderException()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodec.encodeUrl(BitSet,byte[])" value="7.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testUrlSafe()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64TestData.resizeArray(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStream.Base64InputStream(InputStream,boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.RefinedSoundex.RefinedSoundex(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhonetic.CologneOutputBuffer.CologneOutputBuffer(int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder()" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtils.newStringIso8859_1(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhonetic.CologneOutputBuffer.copyData(int,int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Lang.instance(NameType)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.contains(CharSequence,char)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Codec13Test.testEncoder()" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.encode(String,Charset)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.isComplete()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.addLeft(char)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodec.getEncoding()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize(int)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.PhoneticEngine(NameType,RuleType,boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtils.newStringUtf16Le(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhonetic.CologneBuffer.CologneBuffer(int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodec.encode(String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testCodeInteger1()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodec.encode(String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.Metaphone.encode(Object)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundexTest.createStringEncoder()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.Phoneme.getPhonemes()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtils.newString(byte[],String)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32InputStreamTest.testRead0()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.B64.getRandomSalt(int)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha1(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32.Base32(int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.isUrlSafe()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.encode(Object)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero()" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodec.QCodec(Charset)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec(boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.NameType.getName()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodec.encode(Object)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodec.isEmpty(byte[])" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules(PhonemeBuilder,Map&lt;String, List&lt;Rule&gt;&gt;)" value="8.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoder.setNameType(NameType)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.assertMetaphoneEqual(String[][])" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Sha2CryptTest.testCtor()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.createStringEncoder()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.UnixCrypt.desSetKey(byte[])" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.language.Metaphone.isPreviousChar(StringBuilder,int,char)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32InputStream.Base32InputStream(InputStream,boolean,int,byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhonetic.CologneBuffer.CologneBuffer(char[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodecTest.testEncodeNull()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.getI()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testTripletsChunked()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Crypt.crypt(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" value="7.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.encodeBase64String(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.setMaxCodeLen(int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds()" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.patternAndContextMatches(CharSequence,int)" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Languages.SomeLanguages.merge(LanguageSet)" value="4.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodec.Context.Context()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(String,int)" value="8.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Lang.guessLanguage(String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.charsetSanityCheck(String)" value="6.0"/>
    <VALUE measured="org.apache.commons.codec.CharsetsTest.testUtf16Le()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.CacheSubSequencePerformanceTest.cacheSubSequence(CharSequence)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testCodeInteger3()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.AbstractCaverphone.encode(Object)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.startsWith(CharSequence,CharSequence)" value="4.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32InputStream.Base32InputStream(InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Metaphone.isLastChar(int,int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.getRuleType()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.Charsets.toCharset(Charset)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone.isCaverphoneEqual(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testMetaphone()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.NysiisTest.testDan()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testB650()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Hex.encodeHex(byte[],char[])" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.handleG(String,DoubleMetaphoneResult,int,boolean)" value="26.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.handleX(String,DoubleMetaphoneResult,int)" value="6.0"/>
    <VALUE measured="org.apache.commons.codec.language.NysiisTest.testCap()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtilsTest.testSha512()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.handleS(String,DoubleMetaphoneResult,int,boolean)" value="17.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphoneTest.assertDoubleMetaphoneAlt(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.handleCH(String,DoubleMetaphoneResult,int)" value="7.0"/>
    <VALUE measured="org.apache.commons.codec.BinaryEncoderAbstractTest.testEncodeNull()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream(OutputStream,boolean,int,byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone1.encode(String)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.getRContext()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodec.BaseNCodec(int,int,int,int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.getHmacSha256(byte[])" value="1.0"/>
  </METRIC>
  <METRIC class_name="com.sixrr.stockmetrics.methodMetrics.EssentialCyclomaticComplexityMetric">
    <VALUE measured="org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodec.decode(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.decode(Object)" value="4.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha512(byte[],InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule.matches(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testExceedLength()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.DecoderException.DecoderException(Throwable)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.DecoderException.DecoderException(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodec.setEncodeBlanks(boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Md5CryptTest.testCtor()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.NysiisTest.createStringEncoder()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodec.doDecoding(byte[])" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtils.getBytes(String,Charset)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacMd5(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(int,byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Hex.encodeHex(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.handleP(String,DoubleMetaphoneResult,int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Codec105ErrorInputStream.read(byte[],int,int)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testMsSqlServer1()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodec.doEncoding(byte[])" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.createScanner(String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.NysiisTest.testFal()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testEncodeBatch3()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.getPattern()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhonetic.arrayContains(char[],char)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.getHmacSha512(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodec.BCodec(Charset)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha512Hex(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStreamTest.testByteByByte(byte[],byte[],int,byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.md5Hex(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.CharEncodingTest.testUsAscii()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.getNameType()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendPrimary(char)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtilsTest.testSha256()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32InputStream.Base32InputStream(InputStream,boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodecTest.tearDown()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodec.decode(String,String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacMd5Hex(byte[],byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testPairs()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testObjectEncode()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.stripQuotes(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.Phoneme.Phoneme(Phoneme,Phoneme)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone2Test.checkDoubleMetaphone(int,boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.getHmacMd5(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Hex.Hex()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.RefinedSoundex.encode(Object)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Nysiis.Nysiis(boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.updateHmac(Mac,byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.StringEncoderAbstractTest.testEncodeWithInvalidObject()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendAlternate(char)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphoneTest.assertDoubleMetaphone(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Soundex.difference(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(String,boolean)" value="10.0"/>
    <VALUE measured="org.apache.commons.codec.language.NysiisTest.testSpecialBranches()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.log(Throwable)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.RefinedSoundex.RefinedSoundex(char[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(String,int)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha512(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha256Hex(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhonetic.encode(Object)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodec.encode(Object)" value="4.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testEmptyBase64()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodec.getCharset()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodecTest.validateState(URLCodec)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha1Hex(byte[],InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithEmptySalt()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Languages.SomeLanguages.isEmpty()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphoneTest.validateFixture(String[][])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.CharEncodingTest.testUtf16()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.StringEncoderComparator.compare(Object,Object)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodec.decode(Object)" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacMd5(byte[],byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Nysiis.isVowel(char)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream(OutputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Soundex.encode(Object)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testUUID()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.isArrayByteBase64(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testIsStringBase64()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.NysiisTest.testTrueVariant()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.RFC1522Codec.encodeText(String,Charset)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Languages.SomeLanguages.getLanguages()" value="1.0"/>
    <VALUE measured="null.isSingleton()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.UnixCrypt.permOp(int,int,int,int,int[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.getInitializedMac(HmacAlgorithms,byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int,Context)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.invoke()" value="4.0"/>
    <VALUE measured="org.apache.commons.codec.StringEncoderAbstractTest.checkEncodings(String[][])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha256Hex(byte[],byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.getDefaultCharset()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(int)" value="1.0"/>
    <VALUE measured="null.isMatch(CharSequence)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone2Test.createStringEncoder()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testSingletons()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testNullKey()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.testCustomCharset(String,String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodecTest.testProvidePaddingByte()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone1Test.createStringEncoder()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Crypt.crypt(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(Scanner,String,Map&lt;Character, List&lt;Rule&gt;&gt;,Map&lt;Character, Character&gt;)" value="9.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodecTest.testEncodeObjects()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.RFC1522CodecTest.RFC1522TestCodec.getEncoding()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Hex.decodeHex(char[])" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha384(byte[],InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.EncoderExceptionTest.testConstructorString()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.pattern(String)" value="12.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.shaHex(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoder.getNameType()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.encodeInteger(BigInteger)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32Test.testBase32Samples()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64TestData.randomData(int,boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtilsTest.testMd5Length()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhonetic.preprocess(String)" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Codec13Test.initBYTES()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha1Hex(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch.equals(Object)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.md2Hex(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(String,int)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodecInputStream.reset()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha384Hex(byte[],InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha512(byte[],byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.getShaDigest()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone.encode(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64TestData.fill(byte[],int,InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testNewInstance()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.getMd5Digest()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.Base64(int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec(Charset,boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodec.getDefaultBufferSize()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.getSha384Digest()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32TestData.bytesContain(byte[],byte)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.decodeInteger(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.Phoneme.toString()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtils.equals(CharSequence,CharSequence)" value="4.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(BitSet,byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendPrimary(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodec.decode(Object)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.encode(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.EncoderException.EncoderException(Throwable)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodec.QCodec(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testConstructors()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.getPhonemes()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.CharEncodingTest.testUtf16Be()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodec.Context.toString()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStream.Base64InputStream(InputStream,boolean,int,byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Hex.encode(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptNullData()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodec.readResults(byte[],int,int,Context)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32.Base32(boolean,byte)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodec.decode(byte[])" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodecTest.testInvalidEncoding()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64OutputStreamTest.testByChunk(byte[],byte[],int,byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Languages.SomeLanguages.restrictTo(LanguageSet)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.CharEncodingTest.testConstructor()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.encodeBase64(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule.Rule(String,String,String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.EncoderException.EncoderException(String,Throwable)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodec.decode(String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.PhonemeBuilder(Phoneme)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.handleH(String,DoubleMetaphoneResult,int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodec.decode(Object)" value="4.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.updateDigest(MessageDigest,InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testPHTOF()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha512(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.RefinedSoundex.getMappingCode(char)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Lang.guessLanguages(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhonetic.isEncodeEqual(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Soundex.getSoundexMapping()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream(OutputStream,boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.handleGH(String,DoubleMetaphoneResult,int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodec.BCodec(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodecTest.constructString(int[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.StringEncoderAbstractTest.checkEncodingVariations(String,String[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.isBase64(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodec.decode(Object)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.EncoderException.EncoderException(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testEncodeDecode(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.copyData(int,int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha384Hex(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(char)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testNewInstance2()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha1Hex(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testCodeIntegerEdgeCases()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtils.getBytesUnchecked(String,String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtils.getBytesUtf16Le(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodecInputStream.mark(int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Crypt.crypt(byte[],String)" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphone()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.Base64(int,byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha(InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testMsSqlServer3()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.UnixCrypt.fourBytesToInt(byte[],int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha256Hex(byte[],InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Languages.Languages(Set&lt;String&gt;)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.getDigest(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone.Caverphone()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32.Base32(int,byte[],boolean,byte)" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.md5Hex(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.testEncodeZeroes()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacAlgorithms.toString()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.NysiisTest.testRule1()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha512Hex(byte[],byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhoneticTest.testExamples()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodecTest.assertDecodeObject(byte[],String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.log(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStream.Base64InputStream(InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.createScanner(NameType,RuleType,String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.net.RFC1522Codec.encodeText(String,String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodecOutputStream.flush()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_Space_NoMatch()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Languages.SomeLanguages.contains(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.PhonemeList.PhonemeList(List&lt;Phoneme&gt;)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.encode(Object)" value="4.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodecTest.setUp()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodecOutputStream.BaseNCodecOutputStream(OutputStream,BaseNCodec,boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte[],boolean)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.language.Metaphone.isVowel(StringBuilder,int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.CacheSubSequencePerformanceTest.test(CharSequence)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testCodec112()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullAlgo()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.shaHex(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule.getReplacements(String,boolean)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStream(int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.md2Hex(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.assertIsMetaphoneEqual(String,String[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.shaHex(InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.isInAlphabet(byte)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha1(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphoneTest.createStringEncoder()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodecInputStream.skip(long)" value="4.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.decode(String,String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Lang.Lang(List&lt;LangRule&gt;,Languages)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Soundex.encode(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundex.encode(String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.getNextChar()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.StringEncoderComparator.StringEncoderComparator(StringEncoder)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Hex.encodeHexString(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullSalt()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundexTest.encode(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NINO_NoChange()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodec.toByteArray(String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.assertNotEmpty(BeiderMorseEncoder,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtils.newStringUtf8(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha256(byte[],byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Soundex.getMappingCode(String,int)" value="4.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.testCustomCharsetToString()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.getPhoneme()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule.isVowel(char)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.B64Test.testB64from24bit()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(String,String)" value="6.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(int,boolean,ByteArrayOutputStream)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Languages.getInstance(NameType)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.CacheSubSequencePerformanceTest.test()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoder.isConcat()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Languages.getLanguages()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(String)" value="6.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodecOutputStream.flush(boolean)" value="1.0"/>
    <VALUE measured="null.restrictTo(LanguageSet)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodec.resizeBuffer(Context)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtils.getBytesUtf16Be(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtilsTest.testConstructor()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.NysiisTest.testRule4Dot2()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.contains(String,int,int,String...)" value="4.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Codec13Test.utf8(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testNewInstance3()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.Phoneme.Phoneme(Phoneme,Phoneme,LanguageSet)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.encodeBase64Chunked(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.getRandom()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.LanguageGuessingTest.data()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullData()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.validateFixture(String[][])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testHWRuleEx2()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.encode(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.NysiisTest.testSnat()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32.Base32(byte)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.CharsetsTest.testUtf16()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.Phoneme.append(CharSequence)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStream(int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.testDecodeClassCastException()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.StringEncoderComparator.StringEncoderComparator()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.getInstance(NameType,RuleType,LanguageSet)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.toString(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],String)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.getMaxCodeLen()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodec.encodeToString(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Hex.toString()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodecTest.constructString(int[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.md2Hex(InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32.Base32()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testKnownDecodings()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.PhoneticEngine(NameType,RuleType,boolean,int)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.decode(String,Charset)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.DoubleMetaphoneResult(int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,Context)" value="6.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testTCH()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.getMaxPhonemes()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.decode(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodec.containsAlphabetOrPad(byte[])" value="4.0"/>
    <VALUE measured="org.apache.commons.codec.language.Soundex.map(char)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.Phoneme.getLanguages()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.getPrimary()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.conditionCH0(String,int)" value="4.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.testEncodeClassCastException()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testWhy()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.endsWith(CharSequence,CharSequence)" value="4.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha384Hex(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.PhonemeList.getPhonemes()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha256Hex(InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.RFC1522CodecTest.RFC1522TestCodec.doDecoding(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundex.DaitchMokotoffSoundex()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundex.cleanup(String)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.testCustomCharset()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhonetic.encode(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[],String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64TestData.streamToBytes(InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStream(int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodecTest.constructString(int[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testBadCharacters()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testKnownEncodings()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla()" value="1.0"/>
    <VALUE measured="null.compare(Phoneme,Phoneme)" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.getInstanceMap(NameType,RuleType,String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch.Branch()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch.createBranch()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[])" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(char,char)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundexTest.soundex(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.NysiisTest.testRule6()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.CryptTest.testCryptWithBytes()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.getSha256Digest()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendAlternate(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64TestData.bytesContain(byte[],byte)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtils.getBytesIso8859_1(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodec.encode(Object)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Languages.getInstance(String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodecTest.testEncodeObjects()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.Phoneme.mergeWithLanguage(LanguageSet)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Soundex.soundex(String)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Soundex.getMaxLength()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.UnixCrypt.crypt(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Hex.Hex(Charset)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Soundex.Soundex(char[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Languages.SomeLanguages.isSingleton()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testDecodePadOnly()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha256Hex(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.handleAEIOUY(DoubleMetaphoneResult,int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodec.getCharset()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha384(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Metaphone.isNextChar(StringBuilder,int,char)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodecTest.testEncodeObjects()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream(OutputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtils.newString(byte[],Charset)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.getMd2Digest()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.md5(InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha1Hex(InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Hex.decode(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32Test.testBase32Chunked()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.getHmacSha1(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundex.encode(Object)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Lang.LangRule.matches(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testByteToStringVariations()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodec.encode(String,String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtils.getBytesUtf16(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodec.encode(String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha1(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodecTest.testNullInput()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.DecoderExceptionTest.testConstructor0()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testSecretKeySpecAllowsEmtyKeys()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.CharsetsTest.testUtf16Be()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.createStringEncoder()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha256(byte[],InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodec.decode(Object)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.Rule(String,String,String,PhonemeExpr)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testIsUrlSafe()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexUtils.difference(StringEncoder,String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testCodeInteger2()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.LanguageGuessingTest.LanguageGuessingTest(String,String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64OutputStreamTest.testByteByByte(byte[],byte[],int,byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.isConcat()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha1(byte[],InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.PhonemeBuilder(Set&lt;Phoneme&gt;)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodecInputStream.read()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.NysiisTest.testBran()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.DecoderException.DecoderException()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacMd5Hex(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha512Hex(InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.updateHmac(Mac,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(BitSet,byte[],boolean)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.StringEncoderAbstractTest.testLocaleIndependence()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Crypt.crypt(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testTriplets()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtils.newIllegalStateException(String,UnsupportedEncodingException)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream(OutputStream,boolean,int,byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.handleZ(String,DoubleMetaphoneResult,int,boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testCodec68()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Nysiis.nysiis(String)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeBasic()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoder.removeDoubleConsonants(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodec.getEncoding()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.NysiisTest.testOthers()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32.isInAlphabet(byte)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Metaphone.getMaxCodeLen()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Soundex.Soundex()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodec.encode(Object)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.StringEncoderAbstractTest.testEncodeEmpty()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.append(CharSequence)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testNonBase64Test()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithInvalidSalt()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Lang.LangRule.LangRule(Pattern,Set&lt;String&gt;,boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.removeNext()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodec.encode(String,String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.handleD(String,DoubleMetaphoneResult,int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule.getPatternLength()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_CapitalA_ReturnsTrue()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testConstructor()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,Context)" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.net.RFC1522CodecTest.assertExpectedDecoderException(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(byte)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha512Hex(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.getInstanceMap(NameType,RuleType,LanguageSet)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone1Test.testEndMb()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoder.setRuleType(RuleType)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.handleR(String,DoubleMetaphoneResult,int,boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodec.URLCodec(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodec.getDefaultCharset()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.parseRules(Scanner,String)" value="8.0"/>
    <VALUE measured="org.apache.commons.codec.language.Soundex.setMaxLength(int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha1Hex(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" value="12.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testDifference()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testCodeInteger4()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodec.available(Context)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.BinaryEncoderAbstractTest.testEncodeEmpty()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Hex.toDigit(char,int)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.Base64(int,byte[],boolean)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.language.Metaphone.isMetaphoneEqual(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.B64.b64from24bit(byte,byte,byte,int,StringBuilder)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(int,ByteArrayOutputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.md2(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.handleJ(String,DoubleMetaphoneResult,int,boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.RefinedSoundexTest.testDifference()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.handleSC(String,DoubleMetaphoneResult,int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.CharsetsTest.testUtf8()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Languages.LanguageSet.from(Set&lt;String&gt;)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha256(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoder.isVowel(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodecTest.testInvalidEncoding()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.Base64(boolean)" value="1.0"/>
    <VALUE measured="null.contains(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisVowel_SingleVowel_ReturnsTrue()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.cleanInput(String)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Codec13Test.initSTRINGS()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.empty(LanguageSet)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec(Charset)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.testDencodeEmpty()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.CacheSubSequencePerformanceTest.test(CharSequence,int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Nysiis.encode(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.updateHmac(Mac,InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32TestData.randomData(BaseNCodec,int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnameCornerCase_Nulls_NoMatch()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.encode(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone2Test.createStringEncoder()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha384(InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.getPhonemeBuilder()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexUtils.differenceEncoded(String,String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule.toString()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.handleT(String,DoubleMetaphoneResult,int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodec.encode(String,String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoder.encode(String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32TestData.streamToBytes(InputStream,byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(String,String)" value="4.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.join(Iterable&lt;String&gt;,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStreamTest.testRead0()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.testEncodeEmpty()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testMsSqlServer2()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone2.encode(String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.RefinedSoundex.RefinedSoundex()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testInternalNoSuchAlgorithmException()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.decodeBase64(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(CharSequence,boolean,int,CharSequence,int,int)" value="6.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.getAlternate()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Codec105ErrorInputStream.read()" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testEncodeBatch2()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.DecoderExceptionTest.testConstructorString()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodec.doDecoding(byte[])" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.Phoneme.Phoneme(CharSequence,LanguageSet)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.handleC(String,DoubleMetaphoneResult,int)" value="7.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodec.hasData(Context)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodecInputStream.available()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.RuleTest.NegativeIntegerBaseMatcher.describeTo(Description)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.RFC1522CodecTest.testNullInput()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.handleL(String,DoubleMetaphoneResult,int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacMd5(byte[],InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhonetic.CologneBuffer.toString()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.NameType.NameType(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.Phoneme.join(Phoneme)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoder.getRuleType()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.encode(String,String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.getNextPos()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodec.decode(String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodec.toAsciiString(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.charAt(String,int)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch.finish()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.toIntegerBytes(BigInteger)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha1(byte[],byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Languages.SomeLanguages.SomeLanguages(Set&lt;String&gt;)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testStringToByteVariations()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.RefinedSoundexTest.testEncode()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.getHmacSha384(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha384(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Hex.getCharsetName()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.RuleType.getName()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone.encode(Object)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.UnixCrypt.dEncrypt(int,int,int,int,int,int[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(Object)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodec.decode(String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtils.getBytesUtf8(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedNullInput()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Hex.getCharset()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.UnixCrypt.hPermOp(int,int,int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngineTest.PhoneticEngineTest(String,String,NameType,RuleType,boolean,int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(String,boolean)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.isSilentStart(String)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha1(InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],String,String)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32TestData.resizeArray(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.UnixCrypt.crypt(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.testRequiredCharset()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.getSha1Digest()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEnginePerformanceTest.test()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32OutputStreamTest.testByteByByte(byte[],byte[],int,byte[])" value="1.0"/>
    <VALUE measured="null.toString()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoder.getFirst3Last3(String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest(String[][],boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStream(int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhoneticTest.testHyphen()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.RefinedSoundex.soundex(String)" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodec.BaseNCodec(int,int,int,int,byte)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoder.cleanName(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhonetic.CologneOutputBuffer.addRight(char)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" value="4.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.EncoderExceptionTest.testConstructor0()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.CryptTest.testCrypt()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.getCharset()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4()" value="1.0"/>
    <VALUE measured="null.merge(LanguageSet)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.CharEncodingTest.testUtf8()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.encode(Map&lt;String, String&gt;,boolean,String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha384(byte[],byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch.processNextReplacement(String,boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.StringEncoderAbstractTest.getStringEncoder()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodecTest.testDecodeObjects()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.CologneInputBuffer(char[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.apply(PhonemeExpr,int)" value="6.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone2Test.testEndMb()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.RefinedSoundex.encode(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacAlgorithms.HmacAlgorithms(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha384Hex(InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,Context)" value="6.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt(byte[],String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.isFound()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.NysiisTest.testDad()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.AbstractCaverphone.AbstractCaverphone()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.CharEncodingTest.testIso8859_1()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoder.setConcat(boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundex.DaitchMokotoffSoundex(boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodec.encode(String,Charset)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodec.getDefaultCharset()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtils.getBytesUsAscii(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha256(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha384Hex(byte[],byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUnchecked(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.isVowel(char)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.isBase64(byte[])" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.language.Metaphone.Metaphone()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodec.getEncoding()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Nysiis.Nysiis()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testBase64()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32.Base32(int,byte[],boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.decodeBase64(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32InputStreamTest.testByteByByte(byte[],byte[],int,byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.CharEncodingTest.testUtf16Le()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtils.newStringUsAscii(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch.hashCode()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.getInitializedMac(String,byte[])" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.createStringEncoder()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStreamTest.testByChunk(byte[],byte[],int,byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Hex.encode(Object)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32.Base32(boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.makeString()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha384Hex(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Languages.langResourceName(NameType)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,Context)" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhonetic.CologneBuffer.length()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.Phoneme.getPhonemeText()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testHWRuleEx3()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhoneticTest.createStringEncoder()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.Charsets.toCharset(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Codec13Test.initCHUNKED_STRINGS()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngineTest.data()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtilsTest.testNewString(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Languages.SomeLanguages.toString()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.parsePhonemeExpr(String)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testDecodeEncode(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.NysiisTest.assertEncodings(String[]...)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.md5(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtils.newStringUtf16(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtilsTest.testShaHex()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.Base64()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.NysiisTest.testTranan()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.decode(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch.toString()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.checkDecodeHexOddCharacters(char[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream(OutputStream,boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodec.decode(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodec.QCodec()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.updateDigest(MessageDigest,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.StringEncoderAbstractTest.testEncodeNull()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodec.doEncoding(byte[])" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodec.encode(String,Charset)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.RulesApplication(Map&lt;String, List&lt;Rule&gt;&gt;,CharSequence,PhonemeBuilder,int,int)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.RefinedSoundex.difference(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Lang.loadFromResource(String,Languages)" value="7.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32Test.testRandomBytes()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testEncodeBatch4()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.NysiisTest.encodeAll(String[],String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodec.isEncodeBlanks()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.encode(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.createGenericApproxEncoder()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.isDoubleMetaphoneEqual(String,String,boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.testCustomCharsetBadName()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.NysiisTest.testRule2()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.NysiisTest.testRule4Dot1()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Nysiis.isStrict()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Hex.encodeHex(byte[],boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.MessageDigestAlgorithms.MessageDigestAlgorithms()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodec.decode(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32OutputStreamTest.testByChunk(byte[],byte[],int,byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodecTest.constructString(int[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testHWRuleEx1()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone.caverphone(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.UtilsTest.testConstructor()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodec.encode(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.DecoderException.DecoderException(String,Throwable)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.updateDigest(MessageDigest,byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.NysiisTest.testDropBy()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Languages.SomeLanguages.getAny()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Metaphone.setMaxCodeLen(int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.AbstractCaverphone.isEncodeEqual(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testSingletonsChunked()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.createResourceName(NameType,RuleType,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodecInputStream.markSupported()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha512(InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Metaphone.encode(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodecTest.testNullInput()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.RuleTest.NegativeIntegerBaseMatcher.matches(Object)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha256(InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.NysiisTest.testRule7()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha256Hex(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodecOutputStream.close()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(byte[],String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexUtils.clean(String)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.CharsetsTest.testToCharset()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacMd5Hex(byte[],InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.digest(MessageDigest,InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoder.removeVowels(String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.md2(InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Soundex.Soundex(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodec.encodeAsString(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.NysiisTest.testSnad()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.getLContext()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull()" value="1.0"/>
    <VALUE measured="null.compare(Rule,Rule)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha384(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32.Base32(int,byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Hex.decode(Object)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha1Hex(byte[],byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32InputStreamTest.testByChunk(byte[],byte[],int,byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32TestData.fill(byte[],int,InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtilsTest.setUp()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodecTest.testDecodeObjects()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(String,int)" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.getLang()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testEncodeBasic()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32Test.testRandomBytesHex()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodec.getDefaultCharset()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32TestData.streamToBytes(InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha512(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtilsTest.testConstructable()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.Utils.digit16(byte)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhoneticTest.testAaclan()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.UnixCrypt.intToFourBytes(int,byte[],int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoder.encode(Object)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.Metaphone.metaphone(String)" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64TestData.streamToBytes(InputStream,byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_10_Returns3_Successfully()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.CharsetsTest.testIso8859_1()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.handleW(String,DoubleMetaphoneResult,int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.CharsetsTest.testUsAscii()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodec.decodeUrl(byte[])" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodecInputStream.BaseNCodecInputStream(InputStream,BaseNCodec,boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha512Hex(byte[],InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.parsePhoneme(String)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Metaphone.regionMatch(StringBuilder,int,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha512Hex(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodecTest.setUp()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Codec13Test.testDecoder()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.RFC1522CodecTest.RFC1522TestCodec.doEncoding(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__AIDAN_Returns_ADN()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoder.setMaxPhonemes(int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Hex.Hex(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodec.encode(byte[])" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32Test.testBase32HexSamples()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodec.URLCodec()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.hmacSha256(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodecTest.testDecodeObjects()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoder.removeAccents(String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended1()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.md5(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.encode(String,LanguageSet)" value="8.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.getSha512Digest()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac()" value="1.0"/>
    <VALUE measured="null.isEmpty()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.RuleType.RuleType(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.md5Hex(InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.NysiisTest.testRule5()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.isDoubleMetaphoneEqual(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.encodeBase64URLSafe(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(byte)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.StringEncoderAbstractTest.checkEncoding(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngineTest.testEncode()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest(boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodec.encode(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.B64Test.testB64T()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.isBase64(byte)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtilsTest.testSha384()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.UnixCryptTest.testCtor()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],String,String,int,String)" value="3.0"/>
    <VALUE measured="null.getAny()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.RFC1522Codec.decodeText(String)" value="7.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtils.newStringUtf16Be(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.RuleTest.makePhonemes()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Nysiis.encode(Object)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.createStringEncoder()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.UnixCrypt.body(int[],int,int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodec.BCodec()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodec.encode(Object)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.md2(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.handleCC(String,DoubleMetaphoneResult,int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.getInstance(NameType,RuleType,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.RefinedSoundexTest.createStringEncoder()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.EncoderException.EncoderException()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodec.encodeUrl(BitSet,byte[])" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testUrlSafe()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64TestData.resizeArray(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStream.Base64InputStream(InputStream,boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.RefinedSoundex.RefinedSoundex(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhonetic.CologneOutputBuffer.CologneOutputBuffer(int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtils.newStringIso8859_1(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhonetic.CologneOutputBuffer.copyData(int,int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Lang.instance(NameType)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.contains(CharSequence,char)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Codec13Test.testEncoder()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.encode(String,Charset)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.isComplete()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.addLeft(char)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodec.getEncoding()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize(int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.PhoneticEngine(NameType,RuleType,boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtils.newStringUtf16Le(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhonetic.CologneBuffer.CologneBuffer(int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodec.encode(String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testCodeInteger1()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodec.encode(String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.Metaphone.encode(Object)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundexTest.createStringEncoder()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.Phoneme.getPhonemes()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtils.newString(byte[],String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32InputStreamTest.testRead0()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.B64.getRandomSalt(int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtils.sha1(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32.Base32(int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.isUrlSafe()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.encode(Object)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QCodec.QCodec(Charset)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec(boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.NameType.getName()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.BCodec.encode(Object)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodec.isEmpty(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules(PhonemeBuilder,Map&lt;String, List&lt;Rule&gt;&gt;)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.BeiderMorseEncoder.setNameType(NameType)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.assertMetaphoneEqual(String[][])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Sha2CryptTest.testCtor()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.createStringEncoder()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.UnixCrypt.desSetKey(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Metaphone.isPreviousChar(StringBuilder,int,char)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32InputStream.Base32InputStream(InputStream,boolean,int,byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.ColognePhonetic.CologneBuffer.CologneBuffer(char[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodecTest.testEncodeNull()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.getI()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testTripletsChunked()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Crypt.crypt(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64.encodeBase64String(byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.setMaxCodeLen(int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.patternAndContextMatches(CharSequence,int)" value="5.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Languages.SomeLanguages.merge(LanguageSet)" value="3.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodec.Context.Context()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(String,int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Lang.guessLanguage(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.charsetSanityCheck(String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.CharsetsTest.testUtf16Le()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.CacheSubSequencePerformanceTest.cacheSubSequence(CharSequence)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64Test.testCodeInteger3()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.AbstractCaverphone.encode(Object)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.startsWith(CharSequence,CharSequence)" value="4.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base32InputStream.Base32InputStream(InputStream)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Metaphone.isLastChar(int,int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.PhoneticEngine.getRuleType()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.Charsets.toCharset(Charset)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone.isCaverphoneEqual(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MetaphoneTest.testMetaphone()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.NysiisTest.testDan()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.SoundexTest.testB650()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Hex.encodeHex(byte[],char[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.handleG(String,DoubleMetaphoneResult,int,boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.handleX(String,DoubleMetaphoneResult,int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.NysiisTest.testCap()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.DigestUtilsTest.testSha512()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.handleS(String,DoubleMetaphoneResult,int,boolean)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphoneTest.assertDoubleMetaphoneAlt(String,String)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.DoubleMetaphone.handleCH(String,DoubleMetaphoneResult,int)" value="4.0"/>
    <VALUE measured="org.apache.commons.codec.BinaryEncoderAbstractTest.testEncodeNull()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream(OutputStream,boolean,int,byte[])" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.language.Caverphone1.encode(String)" value="2.0"/>
    <VALUE measured="org.apache.commons.codec.language.bm.Rule.getRContext()" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.binary.BaseNCodec.BaseNCodec(int,int,int,int)" value="1.0"/>
    <VALUE measured="org.apache.commons.codec.digest.HmacUtils.getHmacSha256(byte[])" value="1.0"/>
  </METRIC>
  <METRIC class_name="com.sixrr.stockmetrics.packageMetrics.TotalCyclomaticComplexityPackageMetric">
    <VALUE measured="org.apache.commons.codec.language.bm" value="308.0"/>
    <VALUE measured="org.apache.commons.codec.net" value="269.0"/>
    <VALUE measured="org.apache.commons.codec.language" value="958.0"/>
    <VALUE measured="org.apache.commons.codec.digest" value="281.0"/>
    <VALUE measured="org.apache.commons.codec.binary" value="695.0"/>
    <VALUE measured="org.apache.commons.codec" value="61.0"/>
  </METRIC>
  <METRIC class_name="com.sixrr.stockmetrics.packageMetrics.AverageCyclomaticComplexityPackageMetric">
    <VALUE measured="org.apache.commons.codec.language.bm" value="2.0533333333333332"/>
    <VALUE measured="org.apache.commons.codec.net" value="1.8943661971830985"/>
    <VALUE measured="org.apache.commons.codec.language" value="2.407035175879397"/>
    <VALUE measured="org.apache.commons.codec.digest" value="1.3009259259259258"/>
    <VALUE measured="org.apache.commons.codec.binary" value="1.9857142857142858"/>
    <VALUE measured="org.apache.commons.codec" value="1.2708333333333333"/>
  </METRIC>
  <METRIC class_name="com.sixrr.stockmetrics.moduleMetrics.AverageCyclomaticComplexityModuleMetric">
    <VALUE measured="commons-codec" value="1.9723926380368098"/>
  </METRIC>
  <METRIC class_name="com.sixrr.stockmetrics.moduleMetrics.TotalCyclomaticComplexityModuleMetric">
    <VALUE measured="commons-codec" value="2572.0"/>
  </METRIC>
  <METRIC class_name="com.sixrr.stockmetrics.projectMetrics.AverageCyclomaticComplexityProjectMetric">
    <VALUE measured="project" value="1.9723926380368098"/>
  </METRIC>
  <METRIC class_name="com.sixrr.stockmetrics.projectMetrics.TotalCyclomaticComplexityProjectMetric">
    <VALUE measured="project" value="2572.0"/>
  </METRIC>
</SNAPSHOT>